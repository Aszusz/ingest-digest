name: Build and Release Electron App

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (SemVer, e.g. v1.2.3 or 1.2.3)'
        required: true
        type: string
        default: 'v1.0.0'

jobs:
  build:
    name: Build on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: linux
            build_cmd: npm run build:linux
            artifact: app-linux
            path: dist/*.AppImage
          - os: windows-latest
            arch: win
            build_cmd: npm run build:win
            artifact: app-windows
            path: dist/*.exe
          - os: macos-latest
            arch: x64
            build_cmd: npm run build:mac:x64
            artifact: app-macos-x64
            path: dist/*.dmg
          - os: macos-latest
            arch: arm64
            build_cmd: npm run build:mac:arm64
            artifact: app-macos-arm64
            path: dist/*.dmg

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js & cache deps
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for ${{ matrix.os }} (${{
          matrix.arch }})
        run: ${{ matrix.build_cmd }}

      - name: Upload ${{ matrix.artifact }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.path }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.version }}
          name: 'Release ${{ inputs.version }}'
          token: ${{ secrets.RELEASE_TOKEN }}
          draft: false
          prerelease: false
          files: |
            dist/*.AppImage
            dist/*.dmg
            dist/*.exe

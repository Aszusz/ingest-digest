name: Build and Release Electron App

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (SemVer, e.g. v1.2.3 or 1.2.3)'
        required: true
        type: string
        default: 'v1.0.0'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js & cache deps
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Build step per-OS
      - name: Build for Linux (AppImage)
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux
      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: npm run build:mac
      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: npm run build:win

      # Upload only the relevant artifact for each OS
      - name: Upload Linux AppImage
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: app-linux
          path: dist/*.AppImage

      - name: Upload macOS artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: app-macos
          path: dist/*.dmg

      - name: Upload Windows artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: app-windows
          path: dist/*.exe

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Download each platform bundle
      - name: Download Linux AppImage
        uses: actions/download-artifact@v4
        with:
          name: app-linux
          path: dist/linux

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: app-macos
          path: dist/macos

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: app-windows
          path: dist/windows

      # Create the release
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.version }}
          name: 'Release ${{ inputs.version }}'
          token: ${{ secrets.RELEASE_TOKEN }}
          draft: false
          prerelease: false
          files: |
            dist/linux/*.AppImage
            dist/macos/*.dmg
            dist/windows/*.exe
